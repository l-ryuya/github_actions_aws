name: docker build & aws ecr push

on: push
permissions:
  id-token: write
  contents: read
jobs:
  build_and_push_image:
    runs-on: ubuntu-latest
    # outputsの定義
    outputs:
      # イメージのpathを次のjobで使用できるようにすうる
      # 変数名image_path
      item1: ${{ steps.test.outputs.hello}}
      item2: ${{ steps.test1.outputs.image_uri}}
    env:
      AWS_REPOSITORY_NAME: "sample_repo"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: test
        id: test
        run: |
          echo "hello=hello world" >> "$GITHUB_OUTPUT"

      - name: Configure AWS Credentials for China region audience
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ACCESS_ROLE }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: ECR check
        run: |
          ECR_NAME=$(aws ecr describe-repositories --query "repositories[?repositoryName=='${{ env.AWS_REPOSITORY_NAME }}'].repositoryName" --output text)
          if [ "$ECR_NAME" != "" ]; then
            echo "ありました"
            echo $ECR_NAME
          else
            echo "ECRがないので作成します"
            aws ecr create-repository --repository-name ${{ env.AWS_REPOSITORY_NAME }} --region ${{ secrets.AWS_REGION }}
          fi
      # # jobにIDを指定する
      # - name: build and push docker image to ecr
      #   id: test1
      #   env:
      #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     REPOSITORY: ${{ env.AWS_REPOSITORY_NAME }}
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     echo $REGISTRY
      #     echo $REPOSITORY
      #     echo $IMAGE_TAG
      #     IMAGE="${REGISTRY}/${REPOSITORY}:${IMAGE_TAG}"
      #     docker build -f ./docker/Dockerfile . --tag $IMAGE
      #     docker push $IMAGE
      #     echo "image_uri=${REGISTRY}/${REPOSITORY}:${IMAGE_TAG}" >> "$GITHUB_OUTPUT"
      #     echo "IMAGE is $IMAGE"

      # - name: Debug set-image output
      #   run: |
      #     echo "test output: ${{ steps.test.outputs.hello }}"
      #     echo "image_uri output: ${{ steps.test1.outputs.image_uri }}"

      - name: Render Amazon ECS task definition
        id: render-web-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ../ecs/task-definition.json
          container-name: sample_container
          image: test
