name: docker build & aws ecr push

on: push
permissions:
  id-token: write
  contents: read
jobs:
  build_and_push_image:
    runs-on: ubuntu-latest
    # outputsの定義
    outputs:
      image-tag: ${{ steps.get-image.outputs.tag}}
    env:
      AWS_REPOSITORY_NAME: "sample_repo"
      AWS_IMAGE_ITEM: "734908905460.dkr.ecr.ap-northeast-1.amazonaws.com"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials for China region audience
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ACCESS_ROLE }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: ECR check
        run: |
          ECR_NAME=$(aws ecr describe-repositories --query "repositories[?repositoryName=='${{ env.AWS_REPOSITORY_NAME }}'].repositoryName" --output text)
          if [ "$ECR_NAME" != "" ]; then
            echo "ありました"
            echo $ECR_NAME
          else
            echo "ECRがないので作成します"
            aws ecr create-repository --repository-name ${{ env.AWS_REPOSITORY_NAME }} --region ${{ secrets.AWS_REGION }}
          fi

      - name: build and push docker image to ecr
        id: get-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ env.AWS_REPOSITORY_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo $REGISTRY
          echo $REPOSITORY
          echo $IMAGE_TAG
          IMAGE="${REGISTRY}/${REPOSITORY}:${IMAGE_TAG}"
          docker build -f ./docker/Dockerfile . --tag $IMAGE
          docker push $IMAGE
          echo "tag=${IMAGE_TAG}" >> "$GITHUB_OUTPUT"
          echo "IMAGE is $IMAGE"

      - name: check
        run: |
          echo "${{ env.AWS_IMAGE_ITEM }}/${{ env.AWS_REPOSITORY_NAME }}:${{ steps.get-image.outputs.image-tag }}"

      - name: Render Amazon ECS task definition
        id: render-web-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ./ecs/task-definition.json
          container-name: sample_container
          image: ${{ env.AWS_IMAGE_ITEM }}/${{ env.AWS_REPOSITORY_NAME }}:${{ steps.get-image.outputs.image-tag }}

      - name: Deploy to Amazon ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.render-web-container.outputs.task-definition }}
          service: my-service
          cluster: my-cluster